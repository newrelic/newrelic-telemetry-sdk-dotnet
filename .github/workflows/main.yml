name: New Relic Telemetry SDK for .NET

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags:
      - refs/tags/v*.*.*      # v1.0.0
      - refs/tags/v*.*.*-*    # v1.0.0-alpha
      - refs/tags/*_v*.*.*    # SomePrefix_v1.0.0
      - refs/tags/*_v*.*.*-*  # SomePrefix_v1.0.0-alpha
  workflow_dispatch: # Allows team members to manually kick off a build

jobs:

  build-test:
    name: Build Test Deploy

    runs-on: windows-2019

    env:
      artifact_staging_path: ${{ github.workspace }}\artifactstaging
      solution_file_path: ${{ github.workspace }}\NewRelic.sln
      telemetrysdk_path: ${{ github.workspace }}\src\NewRelic.Telemetry\bin\Release\
      exporter_path: ${{ github.workspace }}\src\NewRelic.OpenTelemetry\bin\Release\
      DOTNET_NOLOGO: true

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup Nuget Add to Path
      uses: nuget/setup-nuget@v1.0.5
      with:
        nuget-version: '5.x'  
    
    - name: Restore
      run:  dotnet restore ${{ env.solution_file_path }}
      shell: powershell

    - name: Build
      run:  dotnet build ${{ env.solution_file_path }} --configuration Release --no-restore -p:Deterministic=true
      shell: powershell

    - name: Unit Tests - TelemetrySDK
      run:  dotnet test ${{ github.workspace }}\tests\NewRelic.Telemetry.Tests --no-build --no-restore --configuration Release --logger trx
      shell: powershell

    - name: Unit Tests - OpenTelemetry
      run:  dotnet test ${{ github.workspace }}\tests\NewRelic.OpenTelemetry.Tests --no-build --no-restore --configuration Release --logger trx
      shell: powershell
         
    - name: Archive the artifacts
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact-${{ github.run_id }}
        path: |
          ${{ env.telemetrysdk_path }}
          ${{ env.exporter_path }}

    # This step will only run on a build of master or a tag is created.
    - name: Publish Packages to MyGet
      if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags') }}
      run: |
        foreach ($file in Get-ChildItem -Path "${{ env.telemetrysdk_path }}\*" -File -Include *.nupkg) {
          nuget push $file.fullname -ApiKey ${{ secrets.MYGET_APIKEY }} -Source https://www.myget.org/F/newrelic/api/v2/package -NoSymbols }

        foreach ($file in Get-ChildItem -Path "${{ env.exporter_path }}\*" -File -Include *.nupkg) {
          nuget push $file.fullname -ApiKey ${{ secrets.MYGET_APIKEY }} -Source https://www.myget.org/F/newrelic/api/v2/package -NoSymbols }

        foreach ($file in Get-ChildItem -Path "${{ env.telemetrysdk_path }}\*" -File -Include *.snupkg) {
          nuget push $file.fullname -ApiKey ${{ secrets.MYGET_APIKEY }} -Source https://www.myget.org/F/newrelic/api/v3/index.json }

        foreach ($file in Get-ChildItem -Path "${{ env.exporter_path }}\*" -File -Include *.snupkg) {
          nuget push $file.fullname -ApiKey ${{ secrets.MYGET_APIKEY }} -Source https://www.myget.org/F/newrelic/api/v3/index.json }
      shell: powershell
