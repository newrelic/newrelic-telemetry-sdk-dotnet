trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet build src/NewRelic.Telemetry.sln --configuration $(buildConfiguration)
  displayName: 'Build (configuration=$(buildConfiguration))'

- script: dotnet test src/NewRelic.Telemetry.Tests --no-build --no-restore --configuration $(buildConfiguration) --logger trx
  displayName: 'Run tests - TelemetrySDK'

- script: dotnet test src/OpenTelemetry.Exporter.NewRelic.Tests --no-build --no-restore --configuration $(buildConfiguration) --logger trx
  displayName: 'Run tests - OpenTelemetry'

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

# MSBuild
# Build with MSBuild
- task: MSBuild@1
  inputs:
    solution: '**/*.sln' 
    #msbuildLocationMethod: 'version' # Optional. Options: version, location
    msbuildVersion: 'latest' # Optional. Options: latest, 16.0, 15.0, 14.0, 12.0, 4.0
    #msbuildArchitecture: 'x86' # Optional. Options: x86, x64
    #msbuildLocation: # Optional
    #platform: # Optional
    configuration: $(buildConfiguration) # Optional
    #msbuildArguments: # Optional
    #clean: false # Optional
    #maximumCpuCount: false # Optional
    #restoreNugetPackages: false # Optional
    #logProjectEvents: false # Optional
    #createLogFile: false # Optional
    #logFileVerbosity: 'normal' # Optional. Options: quiet, minimal, normal, detailed, diagnostic

- task: CopyFiles@2
  inputs:
    contents: 'src/NewRelic.Telemetry/bin/$(buildConfiguration)/**/*'
    targetFolder: '$(Build.ArtifactStagingDirectory)/TelemetrySDK'

- task: CopyFiles@2
  inputs:
    contents: 'src/OpenTelemetry.Exporter.NewRelic/bin/$(buildConfiguration)/**/*'
    targetFolder: '$(Build.ArtifactStagingDirectory)/OpenTelemetry'

- task: PublishBuildArtifacts@1

- task: NuGetCommand@2
  condition: and(succeeded(), eq(variables['pushNupkgTelemetrySDK'], 'true'))
  displayName: 'Push NuGet Packages - Telemetry SDK'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/TelemetrySDK/**/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet'

- task: NuGetCommand@2
  condition: and(succeeded(), eq(variables['pushNupkgOpenTelemetry'], 'true'))
  displayName: 'Push NuGet Packages - OpenTelemetry Exporter'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/OpenTelemetry/**/*.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet'
